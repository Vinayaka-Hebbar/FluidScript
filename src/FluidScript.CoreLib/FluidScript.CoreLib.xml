<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FluidScript.CoreLib</name>
    </assembly>
    <members>
        <member name="T:FluidScript.Math">
            <summary>
            Provides constants and static methods for trigonometric, logarithmic, and other
            common mathematical functions.
            </summary>
        </member>
        <member name="M:FluidScript.Math.Pow(FluidScript.Double,FluidScript.Double)">
            <summary>
            Returns a specified number raised to the specified power.
            </summary>
            <param name="x"> A double-precision floating-point number to be raised to a power.</param>
            <param name="y">A double-precision floating-point number that specifies a power.</param>
            <returns>The number x raised to the power y.</returns>
        </member>
        <member name="M:FluidScript.Math.Sqrt(FluidScript.Double)">
             <summary>
             Returns the square root of a specified number.
             </summary>
             <param name="d"> A number.</param>
             <returns>
             One of the values in the following table. d parameter Return value Zero, or positive
            The positive square root of d. Negative System.Double.NaNEquals System.Double.NaNSystem.Double.NaNEquals
            System.Double.PositiveInfinitySystem.Double.PositiveInfinity
            </returns>
        </member>
        <member name="M:FluidScript.Math.Sin(FluidScript.Double)">
            <summary>
            Returns the sine of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
            The sine of a. If a is equal to System.Double.NaN, System.Double.NegativeInfinity,
            or System.Double.PositiveInfinity, this method returns System.Double.NaN.
            </returns>
        </member>
        <member name="M:FluidScript.Math.Cos(FluidScript.Double)">
            <summary>
            Returns the cosine of the specified angle.
            </summary>
            <param name="d">An angle, measured in radians.</param>
            <returns>
            The cosine of d. If d is equal to System.Double.NaN, System.Double.NegativeInfinity,
             or System.Double.PositiveInfinity, this method returns System.Double.NaN.
            </returns>
        </member>
        <member name="M:FluidScript.Math.Tan(FluidScript.Double)">
            <summary>
            Returns the tangent of the specified angle.
            </summary>
            <param name="a">An angle, measured in radians.</param>
            <returns>
            The tangent of a. If a is equal to System.Double.NaN, System.Double.NegativeInfinity,
            or System.Double.PositiveInfinity, this method returns System.Double.NaN.
            </returns>
        </member>
        <member name="M:FluidScript.Math.Tanh(FluidScript.Double)">
            <summary>
            Returns the hyperbolic tangent of the specified angle.
            </summary>
            <param name="value">An angle, measured in radians.</param>
            <returns>
            The hyperbolic tangent of value. If value is equal to System.Double.NegativeInfinity,
            this method returns -1. If value is equal to System.Double.PositiveInfinity,
            this method returns 1. If value is equal to System.Double.NaN, this method returns
            System.Double.NaN.
            </returns>
        </member>
        <member name="T:FluidScript.Boolean">
            <summary>
            <see cref="T:System.Boolean"/> wrapper
            </summary>
        </member>
        <member name="M:FluidScript.Boolean.#ctor(System.Boolean)">
            <summary>
            New <see cref="T:FluidScript.Boolean"/> instance
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:FluidScript.Boolean.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Boolean.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Boolean.ToString">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToChar(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToChar(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToSByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToSingle(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToDouble(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="T:FluidScript.Double">
            <summary>
            Represents a double-precision floating-point number.
            </summary>
        </member>
        <member name="M:FluidScript.Double.#ctor(System.Double)">
            <summary>
            New <see cref="T:FluidScript.Double"/> instance
            </summary>
        </member>
        <member name="M:FluidScript.Double.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Double.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Double.ToString">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToChar(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToSByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToSingle(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToDouble(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToChar(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToSByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToSingle(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToDouble(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Float.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="T:FluidScript.Integer">
            <summary>
            <see cref="T:System.Int32"/> Wrapper
            </summary>
        </member>
        <member name="M:FluidScript.Integer.#ctor(System.Int32)">
            <summary>
            New <see cref="T:FluidScript.Integer"/> instance
            </summary>
        </member>
        <member name="M:FluidScript.Integer.HashCode">
            <summary>
            returns the hashCode() for the instance
            </summary>
        </member>
        <member name="M:FluidScript.Integer.__ToString">
            <summary>
            converts to string
            </summary>
        </member>
        <member name="M:FluidScript.Integer.__Equals(FluidScript.IFSObject)">
            <summary>
            checks <paramref name="other"/> and <see cref="T:FluidScript.Integer"/> are equals
            </summary>
        </member>
        <member name="M:FluidScript.Integer.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Integer.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Integer.ToString">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToChar(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToSByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToSingle(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToDouble(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Integer.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToChar(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToSByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToSingle(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToDouble(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Long.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToChar(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToSByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToByte(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToSingle(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToDouble(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="M:FluidScript.Short.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <internalonly/>
        </member>
        <member name="T:FluidScript.Runtime.RegisterAttribute">
            <summary>
            Runtime name of a property or method
            </summary>
        </member>
        <member name="F:FluidScript.Runtime.RegisterAttribute.Name">
            <summary>
            Name 
            </summary>
        </member>
        <member name="M:FluidScript.Runtime.RegisterAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:FluidScript.Runtime.RegisterAttribute.DoGenerate">
            <summary>
            Should Method name is same as <see cref="F:FluidScript.Runtime.RegisterAttribute.Name"/>
            </summary>
        </member>
        <member name="M:FluidScript.Runtime.RegisterAttribute.Match(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Runtime.RegisterAttribute.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:FluidScript.Runtime.RegisterAttribute.Equals(System.Object)">
            <inheritdoc/>
        </member>
    </members>
</doc>
